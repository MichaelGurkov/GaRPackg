install.packages(c("pls", "quantreg", "sn", "zoo"))
library(GaRPackg)
remove.packages("GaRPackg", lib="~/R/win-library/4.1")
library(GaRPackg)
remove.packages("GaRPackg", lib="~/R/win-library/4.1")
library(GaRPackg)
browseVignettes(GaRPackg)
browseVignettes("GaRPackg")
browseVignettes("GaRPackg")
library(GaRPackg)
library(dplyr)
?mutate()
vignette("dplyr")
install.packages("devtools")
library(devtools)
load_all()
?run_GaR_analysis()
ls(getNamespaceExports("GaRPackg"))
ls(getNamespace("GaRPackg"))
# Chunk 1: load_libraries
library(tidyverse)
devtools::load_all()
library(furrr)
list_of_file_paths = list.files(paste0(Sys.getenv("USERPROFILE"),
"\\OneDrive - Bank Of Israel\\Data\\BoI",
"\\GaR_Data\\robustness"),
pattern = ".rds",full.names = TRUE)
list_of_file_paths
scores_df = map_dfr(list_of_file_paths, extract_scores_from_df)
extract_scores_from_df = function(temp_file_path){
temp_df = read_rds(temp_file_path)
temp_scores_df = temp_df %>%
mutate(id = map_chr(partition,function(temp_str){
return(paste0(unlist(temp_str), collapse = "-"))
})) %>%
mutate(r2_score = map(gar_forecast, function(temp_forecast_df){
r2_score = quantile_r2_score(forecast_df = temp_forecast_df,
actual_df = global_actual_df,
benchmark_df = global_benchmark_df)
return(r2_score)
})) %>%
mutate(pit_score = map(gar_forecast, function(temp_forecast_df){
pit_score = quantile_pit_score(forecast_df = temp_forecast_df,
actual_df = global_actual_df)
return(pit_score)
})) %>%
select(partition, id, r2_score, pit_score)
temp_scores_df = full_join(temp_scores_df %>%
unnest(cols = r2_score),
temp_scores_df %>%
unnest(cols = pit_score),
by = c("partition", "id", "horizon", "quantile")) %>%
select(-c("pit_score","r2_score"))
rm(temp_df)
return(temp_scores_df)
}
scores_df = map_dfr(list_of_file_paths, extract_scores_from_df)
debugonce(extract_scores_from_df)
scores_df = map_dfr(list_of_file_paths, extract_scores_from_df)
temp_file_path
temp_df = read_rds(temp_file_path)
list_of_file_paths[[1]]
temp = read_rds(list_of_file_paths[[1]])
temp = read_rds(list_of_file_paths[[1]])
scores_df = map_dfr(list_of_file_paths, extract_scores_from_df)
global_actual_df = raw_df %>%
preprocess_df(vars_to_yoy = "gdp") %>%
select(date, gdp_yoy) %>%
filter(complete.cases(.))
global_benchmark_df = get_gar_forecast(partitions_list = NULL,
vars_df = raw_df %>%
preprocess_df(vars_to_yoy = "gdp"),
target_var_name = "gdp_yoy",
horizon_list = c(12),
quantile_vec = c(0.1,0.25,0.5,0.75,0.95))
list_of_file_paths = list.files(paste0(Sys.getenv("USERPROFILE"),
"\\OneDrive - Bank Of Israel\\Data\\BoI",
"\\GaR_Data\\robustness"),
pattern = ".rds",full.names = TRUE)
extract_scores_from_df = function(temp_file_path){
temp_df = read_rds(temp_file_path)
temp_scores_df = temp_df %>%
mutate(id = map_chr(partition,function(temp_str){
return(paste0(unlist(temp_str), collapse = "-"))
})) %>%
mutate(r2_score = map(gar_forecast, function(temp_forecast_df){
r2_score = quantile_r2_score(forecast_df = temp_forecast_df,
actual_df = global_actual_df,
benchmark_df = global_benchmark_df)
return(r2_score)
})) %>%
mutate(pit_score = map(gar_forecast, function(temp_forecast_df){
pit_score = quantile_pit_score(forecast_df = temp_forecast_df,
actual_df = global_actual_df)
return(pit_score)
})) %>%
select(partition, id, r2_score, pit_score)
temp_scores_df = full_join(temp_scores_df %>%
unnest(cols = r2_score),
temp_scores_df %>%
unnest(cols = pit_score),
by = c("partition", "id", "horizon", "quantile")) %>%
select(-c("pit_score","r2_score"))
rm(temp_df)
return(temp_scores_df)
}
scores_df = map_dfr(list_of_file_paths, extract_scores_from_df)
write_csv(scores_df, paste0(Sys.getenv("USERPROFILE"),
"\\OneDrive - Bank Of Israel\\Data\\BoI",
"\\GaR_Data\\robustness\\scores.csv"))
# Chunk 1: load_libraries
library(tidyverse)
devtools::load_all()
library(furrr)
# Chunk 2: Import_data
raw_df = import_from_fame_template(
paste0(Sys.getenv("USERPROFILE"),
"\\OneDrive - Bank Of Israel\\Data\\BoI\\GaR_Data",
"\\robustness\\data_GaR_20220904.csv")) %>%
rename_all(tolower)
raw_df = raw_df %>%
select(-starts_with("staff"), -starts_with("dsge"))
raw_df = raw_df %>%
filter(date >= as.yearqtr("2000 Q1") & date <= as.yearqtr("2022 Q2"))
global_actual_df = raw_df %>%
preprocess_df(vars_to_yoy = "gdp") %>%
select(date, gdp_yoy) %>%
filter(complete.cases(.))
global_benchmark_df = get_gar_forecast(partitions_list = NULL,
vars_df = raw_df %>%
preprocess_df(vars_to_yoy = "gdp"),
target_var_name = "gdp_yoy",
horizon_list = c(12),
quantile_vec = c(0.1,0.25,0.5,0.75,0.95))
list_of_file_paths = list.files(paste0(Sys.getenv("USERPROFILE"),
"\\OneDrive - Bank Of Israel\\Data\\BoI",
"\\GaR_Data\\robustness"),
pattern = ".rds",full.names = TRUE)
extract_scores_from_df = function(temp_file_path){
temp_df = read_rds(temp_file_path)
temp_scores_df = temp_df %>%
mutate(id = map_chr(partition,function(temp_str){
return(paste0(unlist(temp_str), collapse = "-"))
})) %>%
mutate(r2_score = map(gar_forecast, function(temp_forecast_df){
r2_score = quantile_r2_score(forecast_df = temp_forecast_df,
actual_df = global_actual_df,
benchmark_df = global_benchmark_df)
return(r2_score)
})) %>%
mutate(pit_score = map(gar_forecast, function(temp_forecast_df){
pit_score = quantile_pit_score(forecast_df = temp_forecast_df,
actual_df = global_actual_df)
return(pit_score)
})) %>%
select(partition, id, r2_score, pit_score)
temp_scores_df = full_join(temp_scores_df %>%
unnest(cols = r2_score),
temp_scores_df %>%
unnest(cols = pit_score),
by = c("partition", "id", "horizon", "quantile")) %>%
select(-c("pit_score","r2_score"))
rm(temp_df)
return(temp_scores_df)
}
scores_df = map_dfr(list_of_file_paths, extract_scores_from_df)
warnings()
# Chunk 1: load_libraries
library(tidyverse)
devtools::load_all()
library(furrr)
list_of_file_paths = list.files(paste0(Sys.getenv("USERPROFILE"),
"\\OneDrive - Bank Of Israel\\Data\\BoI",
"\\GaR_Data\\robustness"),
pattern = ".rds",full.names = TRUE)
extract_scores_from_df = function(temp_file_path){
temp_df = read_rds(temp_file_path)
temp_scores_df = temp_df %>%
mutate(id = map_chr(partition,function(temp_str){
return(paste0(unlist(temp_str), collapse = "-"))
})) %>%
mutate(r2_score = map(gar_forecast, function(temp_forecast_df){
r2_score = quantile_r2_score(forecast_df = temp_forecast_df,
actual_df = global_actual_df,
benchmark_df = global_benchmark_df)
return(r2_score)
})) %>%
mutate(pit_score = map(gar_forecast, function(temp_forecast_df){
pit_score = quantile_pit_score(forecast_df = temp_forecast_df,
actual_df = global_actual_df)
return(pit_score)
})) %>%
select(partition, id, r2_score, pit_score)
temp_scores_df = full_join(temp_scores_df %>%
unnest(cols = r2_score),
temp_scores_df %>%
unnest(cols = pit_score),
by = c("partition", "id", "horizon", "quantile")) %>%
select(-c("pit_score","r2_score"))
rm(temp_df)
return(temp_scores_df)
}
scores_df = map_dfr(list_of_file_paths, extract_scores_from_df)
global_actual_df = raw_df %>%
preprocess_df(vars_to_yoy = "gdp") %>%
select(date, gdp_yoy) %>%
filter(complete.cases(.))
# Chunk 1: load_libraries
library(tidyverse)
devtools::load_all()
library(furrr)
# Chunk 2: Import_data
raw_df = import_from_fame_template(
paste0(Sys.getenv("USERPROFILE"),
"\\OneDrive - Bank Of Israel\\Data\\BoI\\GaR_Data",
"\\robustness\\data_GaR_20220904.csv")) %>%
rename_all(tolower)
raw_df = raw_df %>%
select(-starts_with("staff"), -starts_with("dsge"))
raw_df = raw_df %>%
filter(date >= as.yearqtr("2000 Q1") & date <= as.yearqtr("2022 Q2"))
global_actual_df = raw_df %>%
preprocess_df(vars_to_yoy = "gdp") %>%
select(date, gdp_yoy) %>%
filter(complete.cases(.))
global_benchmark_df = get_gar_forecast(partitions_list = NULL,
vars_df = raw_df %>%
preprocess_df(vars_to_yoy = "gdp"),
target_var_name = "gdp_yoy",
horizon_list = c(12),
quantile_vec = c(0.1,0.25,0.5,0.75,0.95))
list_of_file_paths = list.files(paste0(Sys.getenv("USERPROFILE"),
"\\OneDrive - Bank Of Israel\\Data\\BoI",
"\\GaR_Data\\robustness"),
pattern = ".rds",full.names = TRUE)
extract_scores_from_df = function(temp_file_path){
temp_df = read_rds(temp_file_path)
temp_scores_df = temp_df %>%
mutate(id = map_chr(partition,function(temp_str){
return(paste0(unlist(temp_str), collapse = "-"))
})) %>%
mutate(r2_score = map(gar_forecast, function(temp_forecast_df){
r2_score = quantile_r2_score(forecast_df = temp_forecast_df,
actual_df = global_actual_df,
benchmark_df = global_benchmark_df)
return(r2_score)
})) %>%
mutate(pit_score = map(gar_forecast, function(temp_forecast_df){
pit_score = quantile_pit_score(forecast_df = temp_forecast_df,
actual_df = global_actual_df)
return(pit_score)
})) %>%
select(partition, id, r2_score, pit_score)
temp_scores_df = full_join(temp_scores_df %>%
unnest(cols = r2_score),
temp_scores_df %>%
unnest(cols = pit_score),
by = c("partition", "id", "horizon", "quantile")) %>%
select(-c("pit_score","r2_score"))
rm(temp_df)
return(temp_scores_df)
}
scores_df = map_dfr(list_of_file_paths, extract_scores_from_df)
write_csv(scores_df, paste0(Sys.getenv("USERPROFILE"),
"\\OneDrive - Bank Of Israel\\Data\\BoI",
"\\GaR_Data\\robustness\\scores.csv"))
best_models = scores_df %>%
group_by(quantile) %>%
mutate(best_model_ind = if_else(quantile_r2 >= quantile(quantile_r2,0.95),
1,0)) %>%
ungroup() %>%
group_by(id) %>%
summarise(best_model_total = sum(best_model_ind)) %>%
filter(best_model_total == 5)
features_count = best_models %>%
select(id) %>%
mutate(temp_str = str_split(id,pattern = "-")) %>%
select(temp_str) %>%
rowid_to_column() %>%
unnest(temp_str)
features_count %>%
count(temp_str, sort = TRUE) %>%
ggplot(aes(x = n,y = reorder(temp_str,n))) +
geom_col(aes(fill = as.character(n)), show.legend = FALSE) +
xlab(NULL) + ylab(NULL) +
ggtitle("Count of features frequency in best models")
