function(temp_name){
list(!!!temp_name := partitions_list[[temp_name]])})
map(names(partitions_list),
function(temp_name){
list(!!temp_name = partitions_list[[temp_name]])})
map(names(partitions_list),
function(temp_name){
list(!sym(temp_name) = partitions_list[[temp_name]])})
map(names(partitions_list),
function(temp_name){
list(!sym(temp_name) := partitions_list[[temp_name]])})
map(names(partitions_list),
function(temp_name){
list(!!sym(temp_name) := partitions_list[[temp_name]])})
map(names(partitions_list),
function(temp_name){
list(!!temp_name := partitions_list[[temp_name]])})
map(names(partitions_list),
function(temp_name){
list("{temp_name}" := partitions_list[[temp_name]])})
temp = tibble(x = rep(2,2))
temp
temp_func = function(temp_df, name){
temp_df = temp_df %>%
mutate("{name}" := name)
return(temp_df)
}
temp_func(temp, "my_var")
map(names(partitions_list),
function(temp_name){
c("{temp_name}" := partitions_list[[temp_name]])})
map(names(partitions_list),
function(temp_name){
tibble("{temp_name}" := partitions_list[[temp_name]])})
map(names(partitions_list),
function(temp_name){
c("{temp_name}" := partitions_list[[temp_name]])})
map(names(partitions_list),
function(temp_name){
list("{temp_name}" := partitions_list[[temp_name]])})
map(names(partitions_list),
function(temp_name){
tibble("{temp_name}" := partitions_list[[temp_name]])})
map(names(partitions_list),
function(temp_name){
temp_list = list(partitions_list[[temp_name]])
names(temp_list) = temp_name
return(temp_list)
})
map(names(partitions_list),
function(temp_name){
temp_list = list(paste0(partitions_list[[temp_name]],
"_zlb"))
names(temp_list) = paste0(temp_name,"_zlb")
return(temp_list)
})
partitions_list
partitions_list_elb = map(partitions_list, ~paste0(.,"_elb"))
partitions_list_elb
names(partitions_list_elb) = paste0(names(partitions_list), "_elb")
partitions_list_elb
c(partitions_list,partitions_list_elb
"elb" = "elb")
c(partitions_list,partitions_list_elb,
"elb" = "elb")
partitions_list_elb = map(partitions_list, ~paste0(.,"_elb"))
names(partitions_list_elb) = paste0(names(partitions_list), "_elb")
iar_analysis_elb = run_GaR_analysis(
partitions_list = c(partitions_list,partitions_list_elb,
"elb" = "elb"),
vars_df = df,
target_var_name = "cpi_yoy_elb",
horizon_list = horizon_list,
quantile_vec = quantile_vec,
pca.align.list = list(
output_gap = list("output_gap_elb", TRUE),
expectation = list("beir5y5y_elb", TRUE)
)
)
factor_contributions_elb = calculate_disp_and_skew_contributons(iar_analysis_elb)
unique(factor_contributions_elb$category)
tibble(level = c("cpi_yoy","nis_usd_percent_change",
"brent_usd_percent_change",
"meshulav_gap","beir5y5y", "intercept"),
label = c("Inflation","Exchange Rate",
"Oil prices","Output Gap",
"Expectations","Intercept"))
labels_df = tibble(level = c("cpi_yoy","nis_usd_percent_change",
"brent_usd_percent_change",
"meshulav_gap","beir5y5y", "intercept"),
label = c("Inflation","Exchange Rate",
"Oil prices","Output Gap",
"Expectations","Intercept"))
labels_df %>%
mutate(level = paste0(level,"_zlb"))
labels_df %>%
mutate(across(everything(), ~paste0(.,"_zlb")))
?recode
labels_df %>%
mutate(across(everything(), ~paste0(.,"_elb"))) %>%
mutate(level = recode(level, intercept_elb = "elb", ))
labels_df %>%
bind_rows(labels_df %>%
mutate(across(everything(), ~paste0(.,"_elb"))) %>%
mutate(level = recode(level, intercept_elb = "elb")))
plot_df_elb = make_plot_df(factor_contributions_elb,
labels_df %>%
bind_rows(labels_df %>%
mutate(across(everything(), ~paste0(.,"_elb"))) %>%
mutate(level = recode(level, intercept_elb = "elb"))))
plot_df %>%
mutate(facet = factor(facet, levels = c("iqr", "skew"),
labels = c("Dispersion", "Skewness"))) %>%
ggplot() +
geom_col(aes(date, contribution_value, fill = category)) +
geom_line(aes(date, total_value), size = 1) +
# scale_fill_viridis_d() +
facet_wrap(~facet, scales = "free") +
xlab(NULL) + ylab(NULL)
plot_df_elb %>%
mutate(facet = factor(facet, levels = c("iqr", "skew"),
labels = c("Dispersion", "Skewness"))) %>%
ggplot() +
geom_col(aes(date, contribution_value, fill = category)) +
geom_line(aes(date, total_value), size = 1) +
# scale_fill_viridis_d() +
facet_wrap(~facet, scales = "free") +
xlab(NULL) + ylab(NULL)
iar_analysis_elb
factor_contributions = map_dfr(
list(
"0.25" = 0.25,
"0.5" = 0.5,
"0.75" = 0.75
),
extract_factor_contribution_from_gar_model,
gar_model = iar_analysis_elb,
.id = "quantile"
) %>%
pivot_longer(-c("date", "horizon", "quantile"),
names_to = "category",
values_to = "factor_contribution") %>%
pivot_wider(
id_cols = c("date", "horizon", "category"),
names_from = "quantile",
values_from = "factor_contribution",
names_prefix = "q_"
)
factor_contributions
unique(factor_contributions$category)
factor_contributions = map_dfr(
list(
"0.25" = 0.25,
"0.5" = 0.5,
"0.75" = 0.75
),
extract_factor_contribution_from_gar_model,
gar_model = iar_analysis_elb,
.id = "quantile"
) %>%
pivot_longer(-c("date", "horizon", "quantile"),
names_to = "category",
values_to = "factor_contribution")
factor_contributions
factor_contributions = map_dfr(
list(
"0.25" = 0.25,
"0.5" = 0.5,
"0.75" = 0.75
),
extract_factor_contribution_from_gar_model,
gar_model = iar_analysis_elb,
.id = "quantile"
) %>%
pivot_longer(-c("date", "horizon", "quantile"),
names_to = "category",
values_to = "factor_contribution") %>%
pivot_wider(
names_from = "category",
values_from = "factor_contribution",
)
factor_contributions
factor_contributions = map_dfr(
list(
"0.25" = 0.25,
"0.5" = 0.5,
"0.75" = 0.75
),
extract_factor_contribution_from_gar_model,
gar_model = iar_analysis_elb,
.id = "quantile"
) %>%
pivot_longer(-c("date", "horizon", "quantile"),
names_to = "category",
values_to = "factor_contribution")
factor_contributions
iar_analysis_elb = run_GaR_analysis(
partitions_list = c(partitions_list,partitions_list_elb,
"intercept_elb" = "intercept_elb"),
vars_df = df,
target_var_name = "cpi_yoy_elb",
horizon_list = horizon_list,
quantile_vec = quantile_vec,
pca.align.list = list(
output_gap = list("output_gap_elb", TRUE),
expectation = list("beir5y5y_elb", TRUE)
)
)
raw_df = import_from_fame_template(
paste0(file.path(Sys.getenv("USERPROFILE")),
"\\OneDrive - Bank Of Israel\\Data\\BoI\\IaR_data",
"\\data_Inflation_at_Risk_4InflationBook.csv"),
data_frequency = "monthly"
)
df = raw_df %>%
mutate(rel_tradables = cpi_tradables /
cpi_nontradables_excl_fv_hous) %>%
preprocess_df(
vars_to_yoy = c(
"cpi",
"cpi_excl_fv",
"cpi_excl_fv_hous",
"cpi_excl_hous",
"rel_tradables",
"cpi_oecd",
"cpi_us",
"cpi_euro",
"debt_business",
"debt_households",
"house_price",
"ta125"
),
vars_to_percent_changes = c("nis_usd",
"neer",
"brent_usd",
"brent_nis",
"non_energy_p"),
convert_to_percent_units = TRUE
) %>%
mutate(target = target * 100) %>%
mutate(cpi_yoy_orig = cpi_yoy) %>%
mutate(cpi_yoy = cpi_excl_fv_hous_yoy) %>%
mutate(cpi_yoy_lag = lag(cpi_yoy)) %>%
filter(year(date) >= 2004 & year(date) <= 2019)
filter_obj =  hpfilter(df$madad_meshulav,freq = 1600)
df = df %>%
mutate(meshulav_gap = filter_obj$cycle / filter_obj$trend[,1] * 100)
df = df %>%
mutate(intercept_elb = if_else(date >= as.yearmon("Sep 2014") &
year(date) <= 2019,1,0)) %>%
mutate(across(unlist(partitions_list, use.names = FALSE),
~. * elb, .names = "{col}_elb"))
raw_df = import_from_fame_template(
paste0(file.path(Sys.getenv("USERPROFILE")),
"\\OneDrive - Bank Of Israel\\Data\\BoI\\IaR_data",
"\\data_Inflation_at_Risk_4InflationBook.csv"),
data_frequency = "monthly"
)
df = raw_df %>%
mutate(rel_tradables = cpi_tradables /
cpi_nontradables_excl_fv_hous) %>%
preprocess_df(
vars_to_yoy = c(
"cpi",
"cpi_excl_fv",
"cpi_excl_fv_hous",
"cpi_excl_hous",
"rel_tradables",
"cpi_oecd",
"cpi_us",
"cpi_euro",
"debt_business",
"debt_households",
"house_price",
"ta125"
),
vars_to_percent_changes = c("nis_usd",
"neer",
"brent_usd",
"brent_nis",
"non_energy_p"),
convert_to_percent_units = TRUE
) %>%
mutate(target = target * 100) %>%
mutate(cpi_yoy_orig = cpi_yoy) %>%
mutate(cpi_yoy = cpi_excl_fv_hous_yoy) %>%
mutate(cpi_yoy_lag = lag(cpi_yoy)) %>%
filter(year(date) >= 2004 & year(date) <= 2019)
filter_obj =  hpfilter(df$madad_meshulav,freq = 1600)
df = df %>%
mutate(meshulav_gap = filter_obj$cycle / filter_obj$trend[,1] * 100)
df = df %>%
mutate(intercept_elb = if_else(date >= as.yearmon("Sep 2014") &
year(date) <= 2019,1,0)) %>%
mutate(across(unlist(partitions_list, use.names = FALSE),
~. * intercept_elb, .names = "{col}_elb"))
partitions_list_elb = map(partitions_list, ~paste0(.,"_elb"))
names(partitions_list_elb) = paste0(names(partitions_list), "_elb")
iar_analysis_elb = run_GaR_analysis(
partitions_list = c(partitions_list,partitions_list_elb,
"intercept_elb" = "intercept_elb"),
vars_df = df,
target_var_name = "cpi_yoy_elb",
horizon_list = horizon_list,
quantile_vec = quantile_vec,
pca.align.list = list(
output_gap = list("output_gap_elb", TRUE),
expectation = list("beir5y5y_elb", TRUE)
)
)
factor_contributions = map_dfr(
list(
"0.25" = 0.25,
"0.5" = 0.5,
"0.75" = 0.75
),
extract_factor_contribution_from_gar_model,
gar_model = iar_analysis_elb,
.id = "quantile"
) %>%
pivot_longer(-c("date", "horizon", "quantile"),
names_to = "category",
values_to = "factor_contribution")
factor_contributions
factor_contributions_elb = map_dfr(
list(
"0.25" = 0.25,
"0.5" = 0.5,
"0.75" = 0.75
),
extract_factor_contribution_from_gar_model,
gar_model = iar_analysis_elb,
.id = "quantile"
) %>%
pivot_longer(-c("date", "horizon", "quantile"),
names_to = "category",
values_to = "factor_contribution")
factor_contributions_elb
factor_contributions_elb %>%
separate(category,into = c("category","category_elb"),
sep = "_elb")
factor_contributions_elb %>%
separate(category,into = c("category","category_elb"),
sep = "_el")
factor_contributions_elb
?separate()
factor_contributions_elb
factor_contributions_elb %>%
mutate(category = str_replace_all(category,"_elb$","_A_elb"))
factor_contributions_elb %>%
mutate(category = str_replace_all(category,"_elb$","_A_elb")) %>%
separate(category,into = c("category","category_elb"),
sep = "_A_")
factor_contributions_elb %>%
mutate(category = str_replace_all(category,"_elb$","_A_elb"))
View(factor_contributions)
factor_contributions_elb = map_dfr(
list(
"0.25" = 0.25,
"0.5" = 0.5,
"0.75" = 0.75
),
extract_factor_contribution_from_gar_model,
gar_model = iar_analysis_elb,
.id = "quantile"
)
rm(factor_contributions)
View(factor_contributions_elb)
View(factor_contributions_elb)
View(factor_contributions_elb)
factor_contributions_elb = map_dfr(
list(
"0.25" = 0.25,
"0.5" = 0.5,
"0.75" = 0.75
),
extract_factor_contribution_from_gar_model,
gar_model = iar_analysis_elb,
.id = "quantile"
) %>%
pivot_longer(-c("date", "horizon", "quantile"),
names_to = "category",
values_to = "factor_contribution")
View(factor_contributions_elb)
calculate_disp_and_skew_contributons = function(iar_model){
factor_contributions = map_dfr(
list(
"0.25" = 0.25,
"0.5" = 0.5,
"0.75" = 0.75
),
extract_factor_contribution_from_gar_model,
gar_model = iar_model,
.id = "quantile"
) %>%
pivot_longer(-c("date", "horizon", "quantile"),
names_to = "category",
values_to = "factor_contribution") %>%
pivot_wider(
id_cols = c("date", "horizon", "category"),
names_from = "quantile",
values_from = "factor_contribution",
names_prefix = "q_"
)
factor_contributions = factor_contributions %>%
inner_join(calculate_skew_and_iqr(iar_model),
by = c("date", "horizon")) %>%
filter(horizon == 12) %>%
mutate(
contribution_U = q_0.75 - q_0.5,
contribution_D = q_0.5 - q_0.25,
contribution_iqr = q_0.75 - q_0.25,
contribution_skew = (contribution_U - contribution_D) / iqr
) %>%
select(-c(contribution_U, contribution_D, starts_with("q_")))
return(factor_contributions)
}
make_plot_df = function(factor_contributions, labels_df){
plot_df = factor_contributions %>%
select(-c(skew, iqr)) %>%
pivot_longer(
cols = c(starts_with("contribution")),
names_to = "facet",
values_to = "contribution_value",
names_prefix = "contribution_"
) %>%
inner_join(
factor_contributions %>%
select(-starts_with("contribution")) %>%
pivot_longer(
cols = c(skew, iqr),
names_to = "facet",
values_to = "total_value"
),
by = c("date", "category", "horizon", "facet")
) %>%
group_by(category, facet, horizon) %>%
mutate(across(contains("value"),
~ scale(., scale = FALSE)[, 1])) %>%
ungroup() %>%
mutate(category = factor(category, levels = labels_df$level,
labels = labels_df$label))
return(plot_df)
}
factor_contributions = calculate_disp_and_skew_contributons(iar_analysis) %>%
group_by(date = as.yearqtr(date), category, horizon) %>%
summarise(across(everything(), mean, na.rm = TRUE),
.groups = "drop")
plot_df = make_plot_df(factor_contributions,labels_df)
plot_df %>%
mutate(facet = factor(facet, levels = c("iqr", "skew"),
labels = c("Dispersion", "Skewness"))) %>%
ggplot() +
geom_col(aes(date, contribution_value, fill = category)) +
geom_line(aes(date, total_value), size = 1) +
# scale_fill_viridis_d() +
facet_wrap(~facet, scales = "free") +
xlab(NULL) + ylab(NULL)
factor_contributions_elb = calculate_disp_and_skew_contributons(iar_analysis_elb) %>%
```
iar_analysis_elb
debugonce(calculate_disp_and_skew_contributons)
factor_contributions_elb = calculate_disp_and_skew_contributons(iar_analysis_elb) %>%
```
calculate_disp_and_skew_contributons(iar_analysis_elb)
factor_contributions_elb = calculate_disp_and_skew_contributons(iar_analysis_elb)
factor_contributions_elb
View(factor_contributions)
View(factor_contributions)
View(factor_contributions)
names(factor_contributions_elb)
temp = factor_contributions_elb %>%
pivot_longer(-c(date, horizon, category))
View(temp)
View(factor_contributions)
rm(factor_contributions)
View(factor_contributions_elb)
View(factor_contributions_elb)
factor_contributions_elb %>%
separate(category, into = c(category, elb),sep = "_elb$")
names(factor_contributions_elb)
factor_contributions_elb %>%
separate(category, into = c("category", "elb"),sep = "_elb$")
factor_contributions_elb %>%
separate(category, into = c("category", "elb"),
sep = "_elb$",fill = "right")
factor_contributions_elb %>%
separate(category, into = c("category", "elb"),
sep = "_elb$",fill = "right")
factor_contributions_elb %>%
mutate(indicator = str_detect(category,"_elb$"))
factor_contributions_elb %>%
mutate(indicator = if_else(str_detect(category,"_elb$"), "base","elb"))
factor_contributions_elb %>%
mutate(indicator = if_else(str_detect(category,"_elb$"), "base","elb")) %>%
pivot_longer(-c(date, horizon, category, indicator))
factor_contributions_elb %>%
mutate(indicator = if_else(str_detect(category,"_elb$"), "base","elb")) %>%
pivot_longer(-c(date, horizon, category, indicator)) %>%
pivot_wider(names_from = indicator)
temp = factor_contributions_elb %>%
mutate(indicator = if_else(str_detect(category,"_elb$"), "base","elb")) %>%
pivot_longer(-c(date, horizon, category, indicator)) %>%
pivot_wider(names_from = indicator) %>%
filter(horizon = 12) %>%
filter(date == as.yearmon("Jan 2015"))
factor_contributions_elb %>%
mutate(indicator = if_else(str_detect(category,"_elb$"), "base","elb")) %>%
pivot_longer(-c(date, horizon, category, indicator)) %>%
pivot_wider(names_from = indicator) %>%
filter(horizon == 12) %>%
filter(date == as.yearmon("Jan 2015"))
